/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import databaseKamarr.*;

import static hotel.dataPelanggan.nomorKamarD;
import static hotel.reguler.nomorRe;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;

/**
 *
 * @author HERU A
 */
public class formCheckIn extends javax.swing.JDialog {
    

    /**
     * Creates new form formCheckIn
     */
   
    
    public formCheckIn(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kolomNama = new javax.swing.JTextField();
        kolomNik = new javax.swing.JTextField();
        kolomID = new javax.swing.JTextField();
        kolomLahir = new javax.swing.JTextField();
        kolomTempatLahir = new javax.swing.JTextField();
        kolomTanggalBook = new javax.swing.JTextField();
        kolomJamBook = new javax.swing.JTextField();
        kolomKelas = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tombolSimpan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("nama");

        jLabel2.setText("nik");

        jLabel3.setText("id");

        jLabel4.setText("tanggal lahir");

        jLabel5.setText("tempat lahir");

        jLabel6.setText("tanggal book");

        jLabel7.setText("jam book");

        jLabel8.setText("kelas");

        kolomNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomNamaActionPerformed(evt);
            }
        });

        kolomKelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomKelasActionPerformed(evt);
            }
        });

        jLabel9.setText("check in");

        tombolSimpan.setText("simpan");
        tombolSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSimpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kolomNik, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                                    .addComponent(kolomID)
                                    .addComponent(kolomNama)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kolomLahir)
                                    .addComponent(kolomTempatLahir)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kolomJamBook, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(kolomTanggalBook)
                                    .addComponent(kolomKelas)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tombolSimpan)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(kolomNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kolomNik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kolomID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(kolomLahir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(kolomTempatLahir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(kolomTanggalBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(kolomJamBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(kolomKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(tombolSimpan)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kolomNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomNamaActionPerformed
        // TODO add your handling code here:
       
        
        
    }//GEN-LAST:event_kolomNamaActionPerformed

    private void kolomKelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomKelasActionPerformed
     
    }//GEN-LAST:event_kolomKelasActionPerformed

    private void tombolSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSimpanActionPerformed
        // TODO add your handling code here:
        
        
        String kelas= kolomKelas.getText();
        pelanggan p1=new pelanggan(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),kolomJamBook.getText(),kelas,nomorRe);
        
        if(kelas.equalsIgnoreCase("reguler")){
            
            try { 
                databaseKamarr db=new databaseKamarr();
                
                reguler reg=new reguler("checkin",100000,"reguler",nomorRe);
                db.dbR();
                 try {           
             File inputTemp = new File("database1\\pelanggan.txt");
             
             FileWriter writer = new FileWriter(inputTemp, true);

            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.newLine();
           dataPelanggan dlr=new dataPelanggan();
           dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),kolomJamBook.getText(),kelas,nomorRe);
           for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nama : "+pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal lahir : "+pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tempat lahir : "+pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Id pelanggan : "+pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal checkin : "+pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Kelas kamar : "+pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nomor kamar : "+pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Harga : "+100000); 
                 bufferedWriter.newLine();
                 
           }
            bufferedWriter.close();
                
        } catch (IOException e) {
             e.printStackTrace();
        } 
            
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else if(kelas.equalsIgnoreCase("premium")){
           
            try {
                premium pre=new premium("checkin",200000,"premium",nomorRe);
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            databaseKamarr dbp=new databaseKamarr();
            dbp.dbP();
            try {
                
                
                File inputTemp = new File("database1\\pelanggan.txt");
                
                FileWriter writer = new FileWriter(inputTemp, true);
                
                BufferedWriter bufferedWriter = new BufferedWriter(writer);
                bufferedWriter.newLine();
                dataPelanggan dlr=new dataPelanggan();
                dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),kolomJamBook.getText(),kelas,nomorRe);
                for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nama : "+pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal lahir : "+pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tempat lahir : "+pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Id pelanggan : "+pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal checkin : "+pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Kelas kamar : "+pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nomor kamar : "+pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Harga : "+200000); 
                 bufferedWriter.newLine();
                }
                bufferedWriter.close();
                
            } catch (IOException e) {
                e.printStackTrace();
            }
            
        }
        else if(kelas.equalsIgnoreCase("suite")){
            try { 
                databaseKamarr dbs=new databaseKamarr(); 
                suite s=new suite("checkin",350000,"suite",nomorRe);
                dbs.dbS();
             try {
          
           
             File inputTemp = new File("database1\\pelanggan.txt");
             
             FileWriter writer = new FileWriter(inputTemp, true);

            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.newLine();
           dataPelanggan dlr=new dataPelanggan();
           dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),kolomJamBook.getText(),kelas,nomorRe);
           for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nama : "+pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal lahir : "+pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tempat lahir : "+pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Id pelanggan : "+pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal checkin : "+pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Kelas kamar : "+pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nomor kamar : "+pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Harga : "+350000); 
                 bufferedWriter.newLine();
           }
            bufferedWriter.close();
              
        } catch (IOException e) {
             e.printStackTrace();
        } 
     
    
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else if(kelas.equalsIgnoreCase("vip")){
            try {  
                databaseKamarr dbv=new databaseKamarr();
                vip vip=new vip("checkin",750000,"vip",nomorRe);
                dbv.dbV();
                 try {
          
           
             File inputTemp = new File("database1\\pelanggan.txt");
             
             FileWriter writer = new FileWriter(inputTemp, true);

            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.newLine();
           dataPelanggan dlr=new dataPelanggan();
           dlr.insertData(kolomNama.getText(),kolomNik.getText(),kolomID.getText(),kolomLahir.getText(),kolomTempatLahir.getText(),kolomTanggalBook.getText(),kolomJamBook.getText(),kelas,nomorRe);
           for(pelanggan pl : dlr.getData()){
                 bufferedWriter.write(pl.getNik()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nama : "+pl.getNama()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal lahir : "+pl.getTanggalLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tempat lahir : "+pl.getTempatLahir()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Id pelanggan : "+pl.getId());
                 bufferedWriter.newLine();
                 bufferedWriter.write("Tanggal checkin : "+pl.getTanggalBook()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Kelas kamar : "+pl.getKelas()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Nomor kamar : "+pl.getNomorKamar()); 
                 bufferedWriter.newLine();
                 bufferedWriter.write("Harga : "+750000); 
                 bufferedWriter.newLine();
           }
            bufferedWriter.close();
              
        } catch (IOException e) {
             e.printStackTrace();
        } 
            } catch (IOException ex) {
                Logger.getLogger(formCheckIn.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            
        }
        
    }//GEN-LAST:event_tombolSimpanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formCheckIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                formCheckIn dialog = new formCheckIn(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField kolomID;
    private javax.swing.JTextField kolomJamBook;
    private javax.swing.JTextField kolomKelas;
    private javax.swing.JTextField kolomLahir;
    private javax.swing.JTextField kolomNama;
    private javax.swing.JTextField kolomNik;
    private javax.swing.JTextField kolomTanggalBook;
    private javax.swing.JTextField kolomTempatLahir;
    private javax.swing.JButton tombolSimpan;
    // End of variables declaration//GEN-END:variables
}
